{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\doshi\\\\Apps\\\\app\\\\src\\\\components\\\\Button\\\\index.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport { Icon } from '../Icon';\nimport styles from './Button.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Button = props => {\n  const {\n    children,\n    className,\n    size,\n    color,\n    iconType,\n    type = 'button',\n    ...rest\n  } = props;\n\n  const render = /*#__PURE__*/_jsxDEV(\"span\", {\n    className: styles.contentWrapper,\n    children: [iconType && /*#__PURE__*/_jsxDEV(Icon, {\n      type: iconType,\n      className: clsx(styles.icon, !children && styles.resetMarginRight)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 20\n    }, this), children || null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: type,\n    className: clsx([styles.container, {\n      [styles[size]]: size,\n      [styles[`container_${color}`]]: color\n    }, className]),\n    ...rest,\n    children: render\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_c = Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["C:/Users/doshi/Apps/app/src/components/Button/index.js"],"names":["React","clsx","Icon","styles","Button","props","children","className","size","color","iconType","type","rest","render","contentWrapper","icon","resetMarginRight","container"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAGA,OAAO,MAAMC,MAAM,GAAGC,KAAK,IAAI;AAC3B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA,IAAvB;AAA6BC,IAAAA,KAA7B;AAAoCC,IAAAA,QAApC;AAA8CC,IAAAA,IAAI,GAAG,QAArD;AAA+D,OAAGC;AAAlE,MAA2EP,KAAjF;;AACA,QAAMQ,MAAM,gBACR;AAAM,IAAA,SAAS,EAAEV,MAAM,CAACW,cAAxB;AAAA,eACDJ,QAAQ,iBAAI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,QAAZ;AAAsB,MAAA,SAAS,EAAET,IAAI,CAACE,MAAM,CAACY,IAAR,EAAc,CAACT,QAAD,IAAaH,MAAM,CAACa,gBAAlC;AAArC;AAAA;AAAA;AAAA;AAAA,YADX,EAEKV,QAAQ,IAAI,IAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAOA,sBACI;AACI,IAAA,IAAI,EAAEK,IADV;AAEI,IAAA,SAAS,EACLV,IAAI,CACA,CACIE,MAAM,CAACc,SADX,EAEI;AACI,OAACd,MAAM,CAACK,IAAD,CAAP,GAAgBA,IADpB;AAEI,OAACL,MAAM,CAAE,aAAYM,KAAM,EAApB,CAAP,GAAgCA;AAFpC,KAFJ,EAMIF,SANJ,CADA,CAHZ;AAAA,OAcQK,IAdR;AAAA,cAgBKC;AAhBL;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CA7BM;KAAMT,M","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { Icon } from '../Icon';\r\nimport styles from './Button.module.scss';\r\n\r\n\r\nexport const Button = props => {\r\n    const { children, className, size, color, iconType, type = 'button', ...rest } = props;\r\n    const render = (\r\n        <span className={styles.contentWrapper}>\r\n      {iconType && <Icon type={iconType} className={clsx(styles.icon, !children && styles.resetMarginRight)} />}\r\n            {children || null}\r\n    </span>\r\n    );\r\n\r\n    return(\r\n        <button\r\n            type={type}\r\n            className={\r\n                clsx(\r\n                    [\r\n                        styles.container,\r\n                        {\r\n                            [styles[size]]: size,\r\n                            [styles[`container_${color}`]]: color\r\n                        },\r\n                        className\r\n                    ]\r\n                )\r\n            }\r\n            {...rest}\r\n        >\r\n            {render}\r\n        </button>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}