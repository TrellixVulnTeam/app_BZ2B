{"ast":null,"code":"import _classCallCheck from\"C:/Users/doshi/Apps/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/doshi/Apps/app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/doshi/Apps/app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/doshi/Apps/app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{Button}from'../Button';import{iconTypes}from'../../constants/icons';import styles from'./MarkList.module.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Form=/*#__PURE__*/function(_React$Component){_inherits(Form,_React$Component);var _super=_createSuper(Form);function Form(props){var _this;_classCallCheck(this,Form);_this=_super.call(this,props);_this.onSubmit=function(event){event.preventDefault();var newItemValue=_this.inputRef.current.value;if(!newItemValue){return;}var trimValue=newItemValue.trim();if(trimValue.length){_this.props.addItem({value:newItemValue,uid:Date.now()});_this.formRef.current.reset();}};_this.formRef=/*#__PURE__*/React.createRef();_this.inputRef=/*#__PURE__*/React.createRef();return _this;}_createClass(Form,[{key:\"componentDidMount\",value:function componentDidMount(){this.inputRef.current.focus();}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"form\",{ref:this.formRef,onSubmit:this.onSubmit,children:/*#__PURE__*/_jsxs(\"div\",{className:styles.formContent,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",ref:this.inputRef,placeholder:\"Add new mark\",className:styles.inputField}),/*#__PURE__*/_jsx(Button,{type:\"submit\",iconType:iconTypes.plus,className:styles.submitBtn,children:\"Add\"})]})});}}]);return Form;}(React.Component);","map":{"version":3,"sources":["C:/Users/doshi/Apps/app/src/components/MarksList/Form.js"],"names":["React","Button","iconTypes","styles","Form","props","onSubmit","event","preventDefault","newItemValue","inputRef","current","value","trimValue","trim","length","addItem","uid","Date","now","formRef","reset","createRef","focus","formContent","inputField","plus","submitBtn","Component"],"mappings":"wZAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,KAAuB,WAAvB,CACA,OAASC,SAAT,KAA0B,uBAA1B,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,C,wFAEA,UAAaC,CAAAA,IAAb,wGACI,cAAYC,KAAZ,CAAmB,sCACf,uBAAMA,KAAN,EADe,MAUnBC,QAVmB,CAUR,SAACC,KAAD,CAAW,CAClBA,KAAK,CAACC,cAAN,GACA,GAAMC,CAAAA,YAAY,CAAG,MAAKC,QAAL,CAAcC,OAAd,CAAsBC,KAA3C,CAEA,GAAG,CAACH,YAAJ,CAAkB,CAAE,OAAS,CAE7B,GAAMI,CAAAA,SAAS,CAAGJ,YAAY,CAACK,IAAb,EAAlB,CACA,GAAGD,SAAS,CAACE,MAAb,CAAoB,CAChB,MAAKV,KAAL,CAAWW,OAAX,CAAmB,CAAEJ,KAAK,CAAEH,YAAT,CAAuBQ,GAAG,CAAEC,IAAI,CAACC,GAAL,EAA5B,CAAnB,EACA,MAAKC,OAAL,CAAaT,OAAb,CAAqBU,KAArB,GACH,CAEJ,CAtBkB,CAEf,MAAKD,OAAL,cAAepB,KAAK,CAACsB,SAAN,EAAf,CACA,MAAKZ,QAAL,cAAgBV,KAAK,CAACsB,SAAN,EAAhB,CAHe,aAIlB,CALL,kDAOI,4BAAoB,CAChB,KAAKZ,QAAL,CAAcC,OAAd,CAAsBY,KAAtB,GACH,CATL,sBAyBI,iBAAU,CACN,mBACI,aAAM,GAAG,CAAE,KAAKH,OAAhB,CAAyB,QAAQ,CAAE,KAAKd,QAAxC,uBACI,aAAK,SAAS,CAAEH,MAAM,CAACqB,WAAvB,wBACI,cAAO,IAAI,CAAC,MAAZ,CAAmB,GAAG,CAAE,KAAKd,QAA7B,CAAuC,WAAW,CAAC,cAAnD,CAAkE,SAAS,CAAEP,MAAM,CAACsB,UAApF,EADJ,cAEI,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,QAAQ,CAAEvB,SAAS,CAACwB,IAA1C,CAAgD,SAAS,CAAEvB,MAAM,CAACwB,SAAlE,iBAFJ,GADJ,EADJ,CAQH,CAlCL,kBAA0B3B,KAAK,CAAC4B,SAAhC","sourcesContent":["import React from 'react';\r\nimport { Button } from '../Button';\r\nimport { iconTypes } from '../../constants/icons';\r\nimport styles from './MarkList.module.scss';\r\n\r\nexport class Form extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.formRef = React.createRef();\r\n        this.inputRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.inputRef.current.focus();\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        const newItemValue = this.inputRef.current.value;\r\n\r\n        if(!newItemValue) { return; }\r\n\r\n        const trimValue = newItemValue.trim();\r\n        if(trimValue.length){\r\n            this.props.addItem({ value: newItemValue, uid: Date.now() });\r\n            this.formRef.current.reset();\r\n        }\r\n\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <form ref={this.formRef} onSubmit={this.onSubmit}>\r\n                <div className={styles.formContent}>\r\n                    <input type=\"text\" ref={this.inputRef} placeholder=\"Add new mark\" className={styles.inputField}/>\r\n                    <Button type=\"submit\" iconType={iconTypes.plus} className={styles.submitBtn}>Add</Button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}